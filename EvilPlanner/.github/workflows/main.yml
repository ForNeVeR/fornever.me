name: Main
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 0 * * 6'

jobs:
  test:
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        image: [ ubuntu-20.04, windows-2019 ]
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      NUGET_PACKAGES: ${{ github.workspace }}/.github/nuget-packages
      NPM_CACHE: ${{ github.workspace }}/.github/npm-cache
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: NPM cache
        uses: actions/cache@v2
        with:
          path: ${{ env.NPM_CACHE }}
          key: ${{ runner.os }}.npm.${{ hashFiles('**/yarn.lock') }}
      - name: NPM cache setup
        run: npm config set cache ${{ env.NPM_CACHE }}

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '2.1.x'
      - name: NuGet cache
        uses: actions/cache@v2
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}.nuget.${{ hashFiles('**/*.fsproj') }}
      - name: Build
        run: dotnet build --configuration Release
      - name: Test
        run: dotnet test --configuration Release
      - name: Publish
        run: dotnet publish --configuration Release --output publish
  docker-build:
    runs-on: 'ubuntu-20.04'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build Docker image
        uses: docker/build-push-action@v1
