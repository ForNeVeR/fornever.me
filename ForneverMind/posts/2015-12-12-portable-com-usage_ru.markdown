    title: Портабельное программирование с COM
    description: Решение проблемы с обязательной установкой COM-компонентов при совместной работе с ними в окружении C#.
---

Работа с COM в C# вообще и Visual Studio в частности организована достаточно
удобно: нужно просто добавить ссылку на нужный для разработки компонент с
помощью IDE, и всё. Среда и компилятор сами смогут извлечь из окружения нужную
метаинформацию и сгенерировать обёртки, так что программисту останется только
написать корректный код, который использует эти средства. Да, есть определённые
тонкости и [проблемы][stackoverflow-question], связанные с некорректно
описанными метаданными (в частности, сам я сталкивался с некоторыми проблемами
при интеграции с MS Project), но в большинстве случаев никаких проблем не
возникает.

Однако, у такого способа работы с COM есть и некоторые заметные ограничения. В
частности, для каждой компиляции требуется присутствие на машине установленных
компонентов. Естественно, как же без этого компилятор сможет извлечь из них
метаинформацию и подготовить сборку! Однако же, в реальности это требование
может стать проблематичным.

Как правило, современный код с использованием COM уже не пишут, а используется
он в основном для интеграции с различными устаревшими подсистемами, в изобилии
встречающимися на производстве (и хорошо ещё, если там использован всего лишь
COM, а не какие-нибудь эзотерические компоненты на Прологе или COBOL). Моя
практика показывает, что в разработку такого рода интеграционных средств, как
правило, вовлекается один или два разработчика. Всем остальным причастным к
разработке лицам (в том числе и билд-серверу) устанавливать эти устаревшие
компоненты совершенно не хочется, и было бы очень неприятно, если бы им
обязательно пришлось это делать для компиляции программы.

Конечно, можно подойти к этому вопросу по-разному, в зависимости от архитектуры
системы. Можно изолировать такого рода интеграционные компоненты в отдельные
сборки, можно добавлять в проект специальные конфигурации и делать ссылки на
COM-компоненты доступными только в этих конфигурациях. В данной статье я
предлагаю ещё один возможный вариант взаимодействия с использованием добавленной
в .NET 4 возможности работы с COM с использованием ключевого слова `dynamic`.

[stackoverflow-question]: http://stackoverflow.com/q/31610908/2684760
