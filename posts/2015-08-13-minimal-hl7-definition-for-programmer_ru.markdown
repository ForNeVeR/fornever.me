---
title: Минимум необходимой программисту информации о HL7
description: Минимальное описание формата HL7 v2 и сетевого протокола MLP, необходимое для того, чтобы начать с ними работу.
---

Сегодня мы обсудим формат хранения информации [HL7][hl7] --- формат, при помощи
которого кодируется различная медицинская информация, а также сетевые протколы
и средства, которые позволяют приложениям общаться в этом формате.

Одним из популярных открытых средств для предоставления оборудованию этих
списков является сервер [dcm4che][], так что будем рассматривать его.

## Формат HL7

Итак, HL7 версии 2 --- это стандарт кодирования медицинской информации. Сразу
перейдём к примеру HL7-документа:

```
MSH|^~\&|MPA|SYSTEMA|IMPAX|MDRADAMB|200802210826||ORM^O01|MSG242081|P|2.3|
PID|||0195313690^^^mpa||TEST^PATIENT|TEST|19500131|M|||Johann Reschstr.24^^Mannswoerth^^2320^AT||||||||2601||||||||Arb.|
PV1||O|||||||||||||||||0855025211^^^^0855025211|000003||||||||||||||||||||||||20080220|
ORC|NW|1552647.1|||||^^^20080221082647.1400^^3||20080220233830|MDIM-4A||A225021^Dietl^Christoph^^^OA Dr.|MDIM-4A_MDIM|
OBR||1552647.1||ROE_CP^Cor pulmo^mpa^ROE_CP^CP^mpa||||||||||||A225021^Dietl^Christoph^^^OA Dr.|||1552647.1|1552647.1||||CR|||^^^^20080221^3|
ZDS|1.2.4.0.13.1.432252867.1552647.1^100^Application^DICOM|ScheduledAET|Scheduled Station name
```

Да, это не шутка, именно так и выглядят пакеты в HL7 (обратите внимание на
переносы строк --- они важны для протокола).

_Существует также XML-образный стандарт HL7 версии 3, но в данном посте речь
пойдёт не о нём._

Весь HL7-документ состоит из _сегментов_, которые разделяются символом возврата
каретки `\r` (который в некоторых нормативных документах обозначают также
`<cr>`). В начале каждого сегмента приводится его наименование (обычно состоящее
из трёх букв). Описание каждого сегмента в отдельности можно найти
[в документации][hl7-segments].

Сегмент состоит из _полей_, которые разделяются, как правило, символом `|` (но
это может быть любой другой символ, определённый заголовком пакета). Поле может
содержать один или несколько _компонентов_, разделённых символом `^`.

Первый сегмент `MSH` является обязательным --- это заголовок пакета. Поскольку
он задаёт структуру пакета, то он является несколько особенным. В частности,
четвёртый символ сегмента --- это разделитель полей, который будет использован
во всём теле документа. А его второе поле (первым полем обычно считается поле с
именем сегмента) задаёт несколько других важных разделителей, которые могут быть
использованы в документе; в частности --- разделитель компонентов `^`.
Стандартное значение разделителя полей --- это `|`; стандартное значение второго
поля сегмента MSH --- это `^~\&`.

Содержимое пустых полей опускается (просто ставится пара разделителей); если
группа пустых полей располагается в конце сегмента --- то можно даже разделители
не ставить.

По прочим сегментам стоит поискать нормативную информацию в [документации по
сегментам][hl7-segments]. Отмечу также существование полностью
стандартизированых типов данных, которым должно соответствовать содержимое
каждого поля в сегменте. Например, может существовать существует тип данных "Имя
пациента", в котором указано, что имя состоит из двух компонентов, первый из
которых --- фамилия, а второй --- имя. Поэтому имя "Иван Иванов", например, в
такой тип может быть закодировано как `Иванов^Иван` (с разделителем компонентов,
как отмечено выше).

Поля, которые начинаются с буквы "Z", являются зависимыми от реализации. В
частности, dcm4che предлагает кодировать в поле `ZDS` имена устройств, которым
предназначается HL7-сообщение, и некоторую служебную информацию.

## Протокол MLP

Замечательно, теперь мы умеем кодировать нужную нам информацию в формате HL7v2
(или, во всяком случае, знаем, где искать дальнейшую информацию). Но как нам
передать эту информацию на сервер?

Для обработки информации в формате HL7 предлагается простейший протокол
[MLP][mlp]. Каждое сообщение протокола представляет собой пакет в формате HL7,
перед которым поставлен байт `\x0b`, а после которого --- два байта `\x1c\x0d`.
**Каждую** строку в HL7-документе (в том числе последнюю) следует заканчивать
символом `\r`, причём только одним.

Подключение к MLP-серверу осуществляется через обычный сокет (хотя встречаются
реализации на SSL-сокетах; возможны другие каналы передачи информации, но мне
такие пока не встерчались).

На каждое сообщение клиента сервер отвечает своим сообщением в таком же формате
с теми же разделителями. Тело сообщения также представлено в формате HL7;
интересующая клиента информация хранится в сегменте `MSA` ([документация][msa]).
Статус обработки сообщения, как правило, хранится в поле Acknowledgment Code;
какое-то текстовое пояснение (которое бывает полезно в случае ошибок) --- в поле
Text Message.

В дистрибутиве dcm4che сервер MLP активен по умолчанию и разворачивается на
порту `2575`. Возможно настроить сервер на работу с юникодом; для этого следует
поменять кодировку на "UTF-8" в JMX-консоли, а также, возможно, немного
подтюнить XSL-таблицы, в соответствии с которыми сервер преобразует информацию
из HL7 в DICOM (т.к. в поставке по умолчанию они настроены на однобайтовую
кодировку). Если интересны подробности --- прошу, спрашивайте в комментариях.

А, ну да. Казалось бы, причём тут XSLT, если HL7 --- это текстовый формат?
Поверьте, _вы не хотите этого знать_.

[dcm4che]: http://www.dcm4che.org/
[hl7]: https://ru.wikipedia.org/wiki/HL7_(%D0%BC%D0%B5%D0%B4%D0%B8%D1%86%D0%B8%D0%BD%D1%81%D0%BA%D0%B8%D0%B9_%D1%81%D1%82%D0%B0%D0%BD%D0%B4%D0%B0%D1%80%D1%82)
[hl7-segments]: http://www.mexi.be/documents/hl7/ch200124.htm#E12E109
[mlp]: http://www.hl7standards.com/blog/2007/05/02/hl7-mlp-minimum-layer-protocol-defined/comment-page-1/
[msa]: http://www.mexi.be/documents/hl7/ch200125.htm
